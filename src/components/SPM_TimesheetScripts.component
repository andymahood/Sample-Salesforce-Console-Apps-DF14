<apex:component >
    <script type="text/javascript">
        
        jQuery(document).ready(function($) 
        {
            applicationInit();
        });
        
        function applicationInit() 
        {
            cachedEvents = '';

            /* Calendar Setup */
            var date = new Date();
            var d = date.getDate();
            var m = date.getMonth();
            var y = date.getFullYear();

            $('#calendar').fullCalendar(
            {
                header: 
                {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'month,basicWeek,basicDay'
                },
                defaultView: 'basicWeek',
                height: 300,
                dayClick: dayClickHandler,
                editable: true,
                firstDay: 1,
                eventClick: eventClickHandler,
                eventMouseover: mouseOverHandler,
                columnFormat: {
                    month: 'dddd',     
                    week: 'ddd dS MMM',
                    day: 'dddd dS MMMM'
                },
                eventMouseout: mouseOutHandler,
                eventDrop: eventChangeHandler,
                viewRender: function(view, element)
                {
                    appendTotals(view, cachedEvents);
                },
                events: function(start, end, callback)
                {
                    //Cache notification div for future Use
                    $notyPop = $('#notify-pop');

                    SPM_TimesheetController.getMyObjectAsJson(
                        $('#userId').val(), 
                        $('#calendar').fullCalendar('getDate'),
                        function(result, event) 
                    {
                        if ($notyPop.children().is("ul"))
                        { //remove old notifications
                            $notyPop.children().remove();
                        }

                        messageUser('success', '<strong>Refreshing Calendar</strong>' );

                        var parsedEventsObject = JSON.parse(result);
                        cachedEvents = parsedEventsObject;
                        hoverGenerator(parsedEventsObject);
                        appendTotals(null, parsedEventsObject);
                        callback(parsedEventsObject);

                        $('#btn-show-filter').removeClass('disabled');

                    }, {escape: false});
                },
                theme: true
            });
            
            /* Handle the event when a day is clicked */
            function dayClickHandler(date, allDay, jsEvent, view) 
            {
                var dateFormatted = formatDate(date);

                $('#record-detail').attr('src','/employee/apex/SPM_TimeEdit?isdtp=vw&date=' + encodeURIComponent(dateFormatted));

                $('#detail-iframe-dialog').dialog(
                {
                    modal: true,
                    height: 600,
                    width: 840,
                    close: function(event, ui)
                    {
                        $('#calendar').fullCalendar( 'refetchEvents' );
                    }
                });             

                return false;        
            }
            
            /* Hack to make the calendar jump to the specified month */
            var viewYear = parseInt({!IF(ISBLANK($CurrentPage.Parameters.year), '0', $CurrentPage.Parameters.year)});
            var viewMonth = parseInt({!IF(ISBLANK($CurrentPage.Parameters.month), '0', $CurrentPage.Parameters.month)});

            if(viewYear>0)
            {
                $('#calendar').fullCalendar( 'gotoDate', viewYear, viewMonth);
            }
            
            /* Event handler methods for the calendar */
            
            /* Load the detail page for any calendar event that is clicked. */
            function eventClickHandler(event, jsEvent, view)
            {
                var url = '{!URLFOR($Page.SPM_TimeDetail)}' + '?id=' + event.id + '&isdtp=vw';
                $('#record-detail').attr('src',url);
                    
                $('#detail-iframe-dialog').dialog({
                    modal: true,
                    height: 600,
                    width: 840,
                    close: function(event, ui)
                    {
                        $('#calendar').fullCalendar( 'refetchEvents' );
                    }
                });
            
                return false;
            }
            
            function hoverGenerator(parsedEventsObject)
            {
                $('#campaignInfoPopOvr').children().remove();
                $(parsedEventsObject).each(function(index, record)
                {
                    $('#campaignInfoPopOvr')
                        .append($("<div></div>")
                        .attr('id', record.id)
                        .attr('style', 'display:none')
                        .html(record.description));
                });
            }
            
            // Used to calculate totals for the columns
            function appendTotals(currentView, parsedEventsObject)
            {
                var sunTotal = 0;
                var monTotal = 0;
                var tueTotal = 0;
                var wedTotal = 0;
                var thuTotal = 0;
                var friTotal = 0;
                var satTotal = 0;
                var totalHours = 0;

                if (currentView == null) currentView = $('#calendar').fullCalendar('getView');

                $(parsedEventsObject).each(function(index, record)
                {
                    // Parse string date to date
                    var recordDate = Date.parse(record.start);
                    // If this is null, date was already in date format.
                    if (recordDate == null) recordDate = record.start;

                    // Count hours depending on whether they fit in dates on calendar
                    if (recordDate >= currentView.start && recordDate < currentView.end)
                    {
                        if (recordDate.getDay() == 0) sunTotal += record.hours;
                        if (recordDate.getDay() == 1) monTotal += record.hours;
                        if (recordDate.getDay() == 2) tueTotal += record.hours;
                        if (recordDate.getDay() == 3) wedTotal += record.hours;
                        if (recordDate.getDay() == 4) thuTotal += record.hours;
                        if (recordDate.getDay() == 5) friTotal += record.hours;
                        if (recordDate.getDay() == 6) satTotal += record.hours;
                        totalHours += record.hours;
                    }
                });

                var totalsRowHtml = '<tr class="totals-row">';
                totalsRowHtml += '<td><strong>Total:</strong> ' + monTotal + '</td>';
                totalsRowHtml += '<td><strong>Total:</strong> ' + tueTotal + '</td>';
                totalsRowHtml += '<td><strong>Total:</strong> ' + wedTotal + '</td>';
                totalsRowHtml += '<td><strong>Total:</strong> ' + thuTotal + '</td>';
                totalsRowHtml += '<td><strong>Total:</strong> ' + friTotal + '</td>';
                totalsRowHtml += '<td><strong>Total:</strong> ' + satTotal + '</td>';
                totalsRowHtml += '<td><strong>Total:</strong> ' + sunTotal + '</td>';
                totalsRowHtml += '</tr>';

                $('.totals-row').remove();
                $('#totalHoursValue').text(totalHours);
   
                if (currentView.name == 'basicWeek')
                {
                    $('table.fc-border-separate tbody').append(totalsRowHtml);  
                }

            }
            
            /* tooltip on hover */
            function mouseOverHandler(event, jsEvent)
            {
                if (event.description != '')
                {
                    $('#' + event.id).css({
                        'position' : 'absolute',
                        'z-index' : '9999',
                        'top' : jsEvent.pageY - 90,
                        'left' : jsEvent.pageX - 30
                    }).addClass('hover hover-info').show();  
                }
            }
            
            function mouseOutHandler(event, jsEvent){
                $('#' + event.id).hide();
            }
            
            function eventChangeHandler(event, dayDelta, minuteDelta, allDay, revertFunc, jsEvent, ui, view)
            {

                SPM_TimesheetController.saveEventObject(event.id, event.start, function(saveResult, result) 
                {
                    if (saveResult == 'success')
                    {
                        $('#calendar').fullCalendar( 'refetchEvents' );
                    }
                    else
                    {
                        messageUser('error', saveResult );
                    }
                    
                }, {escape:true});
            }
            
            function StringBuffer() { 
                this.buffer = []; 
            } 

            StringBuffer.prototype.append = function append(string) { 
                this.buffer.push(string); 
                return this; 
            }; 

            StringBuffer.prototype.toString = function toString() { 
                return this.buffer.join(""); 
            }; 

            $('.change-person').button().click(function( event ) 
            {
                $('#change-person').dialog({
                    modal : true,
                    title : 'Select Timesheet to View',
                    width : 400,
                    height: 500,
                    close: function(event, ui)
                    {
                        $('#calendar').fullCalendar( 'refetchEvents' );
                    },
                    buttons: 
                    {
                        Ok: function() 
                        {
                            $(this).dialog("close");
                        }
                    }
                });
            });
            
            $('.reset-person').button().click(function(event) 
            {
                $('.current-user').text('{!$User.FirstName} {!$User.LastName}');
                $('#userId').val('{!$User.Id}');
                $('.tick').hide();
                $('.reset-person').hide();
                $('#calendar').fullCalendar( 'refetchEvents' );
            });

            $('.userSelect').click(function ()
            {
                // Hide all other ticks
                $('.tick').hide();
                // Show tick in correct column
                $(this).parent().closest('td').next('td').find('.tick').show();
                // Update name for display
                $('.current-user').text($(this).text());
                // Update user id input for calendar filtering
                $('#userId').val( $(this).find('input').val() );

                $('.reset-person').show();
            });

            $('.reset-person').hide();

        } // End of applicationInit function
        
        function messageUser(mType, msg)
        {
            var html, img, tOut, mlay;
            //build noty plugin according to its type
            if(mType == 'alert') {
                img = '<img src="{!URLFOR($Resource.icon_set,'info-square-blue.png')}" />';
                msg = '<div class="notyMsg">'+msg+'</div>';
                img = '<div class="notyImg">'+img+'</div>';
                html = img + msg +'<div class="clear"></div>';
                tOut = '30000';
                mlay = 'topRight';
            }
            if(mType == 'error') {
                img = '<img src="{!URLFOR($Resource.icon_set,'ko-red.png')}" />';
                msg = '<div class="notyMsg">'+msg+'</div>';
                img = '<div class="notyImg">'+img+'</div>';
                html = img + msg +'<div class="clear"></div>';
                tOut = '30000';
                mlay = 'topRight';
            }
            if(mType == 'success') {
                mType = 'alert';
                //img = '<img src="{!URLFOR($Resource.icon_set,'ok-green.png')}" />';
                html = msg;
                tOut = '1000';
                mlay = 'top';
            }
            
            $('#notify-pop').noty({
              text: html,
              timeout: tOut,
              type: mType,
              theme : 'noty_theme_twitter',
              layout: mlay
            });
        } 
        
        function notify(t, msg){
            /* notification functionality */
            $('body').bart({
                duration: 1000,
                imgDir: "{!URLFOR($Resource.jquery_notification,'images/')}",                
                message: msg,                
                style: 'notice',                
                type: 'bar',
                title: t,
                opacity: 1,         
                vposition: 'top'
            });
        }

        function formatDate(date) 
        {   
            var yyyy = date.getFullYear().toString();
            var mm = (date.getMonth()+1).toString(); // getMonth() is zero-based
            var dd  = date.getDate().toString();
            return yyyy + '-' + (mm[1]?mm:"0"+mm[0]) + '-' + (dd[1]?dd:"0"+dd[0]);
        }  

        // Close the dialog if an event is deleted
        function closeDialogAfterDelete(iFrameSrc)
        {
            if (iFrameSrc != null)
            {
                if (iFrameSrc.indexOf('SPM_TimeDelete') != -1)
                {
                    $('#detail-iframe-dialog').dialog('close');
                }
            }
        }
        
    </script>
</apex:component>