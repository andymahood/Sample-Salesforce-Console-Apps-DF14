<apex:page showChat="false" showHeader="false" sidebar="false" >
    <apex:includeScript value="//ajax.googleapis.com/ajax/libs/jquery/1.10.1/jquery.min.js" />
    <apex:includeScript value="http://code.highcharts.com/highcharts.js" />
    <apex:includeScript value="http://code.highcharts.com/highcharts-more.js" />
    <apex:includeScript value="http://code.highcharts.com/modules/solid-gauge.src.js" />
    
                 <script>
                        $(document).ready(function() {
                
                      // the id of the Salesforce report
                      var reportId = '{!$CurrentPage.parameters.id}';
                      
                      if (reportId) {
                            
                        // We'll keep the report data around for the life of the page
                        var report = null;
                        
                        // Fetch the JSON data representing the the report
                        var jsonData = JSON.parse($.ajax({
                            beforeSend: function(xhr) {
                              xhr.setRequestHeader('Authorization', 'Bearer {!$Api.Session_ID}');
                              },
                            // You'll need a URL parameter key called "reportid" that has a Summary Report id value
                            url: "/services/data/v29.0/analytics/reports/" + reportId,
                            dataType:"json",
                            async: false
                            }).responseText);
                  
                              report = jsonData;
                              
                          // We're done with the status
                          $("#statusText").hide();
                          
                          // pass the Salesforce JSON report response to the render chart method
                            renderHighChart(report);
                
                        } else {
                          $("#statusText").text("Need a report Id!");
                        }
                
                    });
                        
                        $(function () {

    var gaugeOptions = {

        chart: {
            type: 'solidgauge'
        },

        title: null,

        pane: {
            center: ['50%', '85%'],
            size: '140%',
            startAngle: -90,
            endAngle: 90,
            background: {
                backgroundColor: (Highcharts.theme && Highcharts.theme.background2) || '#EEE',
                innerRadius: '60%',
                outerRadius: '100%',
                shape: 'arc'
            }
        },

        tooltip: {
            enabled: false
        },

        // the value axis
        yAxis: {
            stops: [
                [0.1, '#55BF3B'], // green
                [0.5, '#DDDF0D'], // yellow
                [0.9, '#DF5353'] // red
            ],
            lineWidth: 0,
            minorTickInterval: null,
            tickPixelInterval: 400,
            tickWidth: 0,
            title: {
                y: -70
            },
            labels: {
                y: 16
            }
        },

        plotOptions: {
            solidgauge: {
                dataLabels: {
                    y: 5,
                    borderWidth: 0,
                    useHTML: true
                }
            }
        }
    };

    // The speed gauge
    $('#container-speed').highcharts(Highcharts.merge(gaugeOptions, {
        yAxis: {
            min: 0,
            max: 200,
            title: {
                text: 'Speed'
            }
        },

        credits: {
            enabled: false
        },

        series: [{
            name: 'Speed',
            data: [80],
            dataLabels: {
                format: '<div style="text-align:center"><span style="font-size:25px;color:' +
                    ((Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black') + '">{y}</span><br/>' +
                       '<span style="font-size:12px;color:silver">km/h</span></div>'
            },
            tooltip: {
                valueSuffix: ' km/h'
            }
        }]

    }));

    // The RPM gauge
    $('#container-rpm').highcharts(Highcharts.merge(gaugeOptions, {
        yAxis: {
            min: 0,
            max: 5,
            title: {
                text: 'RPM'
            }
        },

        series: [{
            name: 'RPM',
            data: [1],
            dataLabels: {
                format: '<div style="text-align:center"><span style="font-size:25px;color:' +
                    ((Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black') + '">{y:.1f}</span><br/>' +
                       '<span style="font-size:12px;color:silver">* 1000 / min</span></div>'
            },
            tooltip: {
                valueSuffix: ' revolutions/min'
            }
        }]

    }));

    // Bring life to the dials
    setInterval(function () {
        // Speed
        var chart = $('#container-speed').highcharts(),
            point,
            newVal,
            inc;

        if (chart) {
            point = chart.series[0].points[0];
            inc = Math.round((Math.random() - 0.5) * 100);
            newVal = point.y + inc;

            if (newVal < 0 || newVal > 200) {
                newVal = point.y - inc;
            }

            point.update(newVal);
        }

        // RPM
        chart = $('#container-rpm').highcharts();
        if (chart) {
            point = chart.series[0].points[0];
            inc = Math.random() - 0.5;
            newVal = point.y + inc;

            if (newVal < 0 || newVal > 5) {
                newVal = point.y - inc;
            }

            point.update(newVal);
        }
    }, 2000);


});
                        
                        // Build the array of data from the report, to use for the chart
                        function getDataArray(report){
                            var dataArray = [];
                            $.each(report.groupingsDown.groupings, function(index, grouping) {
                          dataArray.push({"name":grouping.label, "y": report.factMap[index.toString()+"!T"].aggregates[0].value});
                        });
                        return dataArray;
                        }
                    </script>   
                    
                    <h1 id="statusText">Loading data...</h1>
                    
                    <div id="container" style="min-width: 310px; max-width: 600px; height: 400px; margin: 50px auto"></div>
         
  
          <apex:pageBlock >
            <div id="ChartContain">              
                <analytics:reportChart ReportId="00O20000006pqPL" showRefreshButton="true" size="small" cacheResults="false" />
            </div>
        </apex:pageBlock>
  
</apex:page>